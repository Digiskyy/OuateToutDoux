CREATE TABLE Users (
	idUser INTEGER PRIMARY KEY AUTOINCREMENT,
  firstname TEXT NOT NULL,
	lastname TEXT NOT NULL,
	mail TEXT NOT NULL UNIQUE,
	password TEXT NOT NULL,
	sex TEXT,
	phone TEXT,
	age INTEGER,
	dateCreation DATETIME NOT NULL
) ;

CREATE TABLE Lists (
	idList INTEGER PRIMARY KEY AUTOINCREMENT,
	title TEXT NOT NULL,
	dateCreation DATETIME NOT NULL,
	dateEnd DATETIME,
	idUserOwner INTEGER  NOT NULL,
	FOREIGN KEY (idUserOwner) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE
) ;

CREATE TABLE Participations (
	idParticipation INTEGER PRIMARY KEY AUTOINCREMENT,
	dateJoin DATETIME NOT NULL,
	idUser INTEGER  NOT NULL,
	idList INTEGER  NOT NULL,
	FOREIGN KEY (idUser) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idList) REFERENCES Lists(idList) ON UPDATE CASCADE ON DELETE CASCADE
) ;

CREATE TABLE Tasks (
	idTask INTEGER PRIMARY KEY AUTOINCREMENT,
	title TEXT NOT NULL,
	dateCreation DATETIME NOT NULL,
	dateContribution DATETIME,
	state CHAR(1) ,
	idList INTEGER NOT NULL,
	idUserCreation INTEGER  NOT NULL,
	idUserContribution INTEGER ,
	FOREIGN KEY (idList) REFERENCES Lists(idList) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idUserCreation) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idUserContribution) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE
) ;

CREATE TABLE Notifications (
	idNotif INTEGER PRIMARY KEY AUTOINCREMENT,
	about TEXT NOT NULL,
	dateSending DATETIME NOT NULL,
	acceptedInvitation BOOL
) ;

CREATE TABLE Sendings (
	idSending INTEGER PRIMARY KEY AUTOINCREMENT,
	idSender INTEGER,
	idReceiver INTEGER NOT NULL,
	idNotif INTEGER NOT NULL,
	idTask INTEGER,
	idList INTEGER,
	FOREIGN KEY (idSender) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idReceiver) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idNotif) REFERENCES Notifications(idNotif) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idTask) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (idList) REFERENCES Users(idUser) ON UPDATE CASCADE ON DELETE CASCADE
) ;
